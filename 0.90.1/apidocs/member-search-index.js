memberSearchIndex = [{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable.ArchiveFormat","l":"ARC"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat","l":"ArchiveRecordInputFormat()","url":"%3Cinit%3E()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"ArchiveRecordReader()","url":"%3Cinit%3E()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"ArchiveRecordWritable()","url":"%3Cinit%3E()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"ArchiveRecordWritable(ArchiveRecord)","url":"%3Cinit%3E(org.archive.io.ArchiveRecord)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"close()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat","l":"createRecordReader(InputSplit, TaskAttemptContext)","url":"createRecordReader(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"detectFormat()"},{"p":"io.archivesunleashed.data","c":"ArcRecordUtils","l":"fromBytes(byte[])"},{"p":"io.archivesunleashed.data","c":"WarcRecordUtils","l":"fromBytes(byte[])"},{"p":"io.archivesunleashed.data","c":"ArcRecordUtils","l":"getBodyContent(ARCRecord)","url":"getBodyContent(org.archive.io.arc.ARCRecord)"},{"p":"io.archivesunleashed.data","c":"WarcRecordUtils","l":"getBodyContent(WARCRecord)","url":"getBodyContent(org.archive.io.warc.WARCRecord)"},{"p":"io.archivesunleashed.data","c":"ArcRecordUtils","l":"getContent(ARCRecord)","url":"getContent(org.archive.io.arc.ARCRecord)"},{"p":"io.archivesunleashed.data","c":"WarcRecordUtils","l":"getContent(WARCRecord)","url":"getContent(org.archive.io.warc.WARCRecord)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"getCurrentKey()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"getCurrentValue()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"getFormat()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"getProgress()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"getRecord()"},{"p":"io.archivesunleashed.data","c":"WarcRecordUtils","l":"getWarcResponseMimeType(byte[])"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"initialize(InputSplit, TaskAttemptContext)","url":"initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat","l":"isSplitable(JobContext, Path)","url":"isSplitable(org.apache.hadoop.mapreduce.JobContext,org.apache.hadoop.fs.Path)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordInputFormat.ArchiveRecordReader","l":"nextKeyValue()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"readFields(DataInput)","url":"readFields(java.io.DataInput)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"setFormat(ArchiveRecordWritable.ArchiveFormat)","url":"setFormat(io.archivesunleashed.data.ArchiveRecordWritable.ArchiveFormat)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"setRecord(ArchiveRecord)","url":"setRecord(org.archive.io.ArchiveRecord)"},{"p":"io.archivesunleashed.data","c":"ArcRecordUtils","l":"toBytes(ARCRecord)","url":"toBytes(org.archive.io.arc.ARCRecord)"},{"p":"io.archivesunleashed.data","c":"WarcRecordUtils","l":"toBytes(WARCRecord)","url":"toBytes(org.archive.io.warc.WARCRecord)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable.ArchiveFormat","l":"UNKNOWN"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable.ArchiveFormat","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable.ArchiveFormat","l":"values()"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable.ArchiveFormat","l":"WARC"},{"p":"io.archivesunleashed.data","c":"ArchiveRecordWritable","l":"write(DataOutput)","url":"write(java.io.DataOutput)"}]